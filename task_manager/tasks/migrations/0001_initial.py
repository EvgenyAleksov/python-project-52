# Generated by Django 5.1.2 on 2024-11-28 17:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('labels', '0001_initial'),
        ('statuses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True,
                 serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True,
                                                 max_length=10000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.
                 deletion.PROTECT, related_name='author',
                 to=settings.AUTH_USER_MODEL)),
                ('executor', models.ForeignKey(on_delete=django.db.models.
                 deletion.PROTECT, related_name='executor',
                 to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.
                 deletion.PROTECT, to='statuses.status')),
            ],
        ),
        migrations.CreateModel(
            name='TaskLabelRelationships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True,
                 serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(on_delete=django.db.models.
                 deletion.PROTECT, to='labels.label')),
                ('task', models.ForeignKey(on_delete=django.db.models.
                 deletion.CASCADE, to='tasks.task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='labels',
            field=models.ManyToManyField(
                blank=True, related_name='labels',
                through='tasks.TaskLabelRelationships', to='labels.label'),
        ),
    ]
